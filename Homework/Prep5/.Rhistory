?plyr::Idply
?plyr
#| label: load-packages
#| include: false
library(tidyverse)
library(mdsr)
library(kableExtra)
library(mclust)
library(plyr)
?plyr::ldply
?saveRDS
#| label: load-packages
#| include: false
library(tidyverse)
library(mdsr)
library(kableExtra)
library(mclust)
library(plyr)
# set up text data provided
data(Macbeth_raw)
# str_split returns a list: we only want the first element
macbeth <- Macbeth_raw %>%
str_split("\r\n") %>%
pluck(1)
length(str_subset(macbeth, "  MACBETH"))
str_subset(macbeth, "  MACBETH") %>% head()
length(str_which(macbeth, "  MACBETH"))
str_which(macbeth, "  MACBETH") %>% head()
length(str_detect(macbeth, "  MACBETH"))
str_detect(macbeth, "  MACBETH") %>% head()
str_subset(macbeth, "MACBETH\\.") %>% head()
str_subset(macbeth, "MACBETH.") %>% head()
str_subset(macbeth, ".*MAC[B-Z]") %>% head()
str_subset(macbeth, ".MAC[B-Z]") %>% head()
str_subset(macbeth, "more$") %>% head()
# Code below should return character(0) (i.e., nothing)
str_subset(macbeth, "^MAC[B|Z]") %>% head()
data(world_cities)
# Identify the 4,000 biggest cities in the world
big_cities <- world_cities %>%
arrange(desc(population)) %>%
head(4000) %>%
select(longitude, latitude)
# Make sure to set seed for reproducibility!
set.seed(15)
city_kmeans_results <- big_cities %>%
kmeans(centers = 6, nstart = 30)
data(world_cities)
# Identify the 4,000 biggest cities in the world
big_cities <- world_cities %>%
arrange(desc(population)) %>%
head(4000) %>%
select(longitude, latitude)
# Make sure to set seed for reproducibility!
set.seed(15)
city_kmeans_results <- big_cities %>%
kmeans(centers = 6, nstart = 30)
glimpse(city_kmeans_results)
# Check object class or type
class(city_kmeans_results)
# Check named elements of object
names(city_kmeans_results)
?class
?names
?class
?names
# Centroids
city_kmeans_results$centers
# Cluster sizes
city_kmeans_results$size
# Join cluster assignments with original dataset
big_cities <- big_cities %>%
add_column(cluster = factor(city_kmeans_results$cluster))
# Make dataframe out of estimated cluster centroids
city_cluster_centers <- city_kmeans_results$centers %>%
data.frame() %>%
add_column(cluster_number = 1:6)
# Plot cluster assignments and centroids
ggplot(big_cities, aes(x = longitude, y = latitude)) +
geom_point(aes(color = cluster), alpha = 0.6)  +
scale_color_brewer(palette = "Spectral") +
geom_label(data = city_cluster_centers,
aes(label = cluster_number),
size = 3) +
theme(legend.position = "none")
# be sure to set a seed for reproducibility before k-means runs
# Identify the 4,000 biggest cities in the world
big_cities <- world_cities %>%
arrange(desc(population)) %>%
head(4000) %>%
select(longitude, latitude)
# Make sure to set seed for reproducibility!
set.seed(12)
city_kmeans_results <- big_cities %>%
kmeans(centers = 3, nstart = 30)
# Centroids
city_kmeans_results$centers
# Cluster sizes
city_kmeans_results$size
# be sure to set a seed for reproducibility before k-means runs
# Identify the 4,000 biggest cities in the world
big_cities <- world_cities %>%
arrange(desc(population)) %>%
head(4000) %>%
select(longitude, latitude)
# Make sure to set seed for reproducibility!
set.seed(12)
city_kmeans_results <- big_cities %>%
kmeans(centers = 3, nstart = 30)
# Centroids
city_kmeans_results$centers
# Cluster sizes
city_kmeans_results$size
# Join cluster assignments with original dataset
big_cities <- big_cities %>%
add_column(cluster = factor(city_kmeans_results$cluster))
# Make dataframe out of estimated cluster centroids
city_cluster_centers <- city_kmeans_results$centers %>%
data.frame() %>%
add_column(cluster_number = 1:3)
# Plot cluster assignments and centroids
ggplot(big_cities, aes(x = longitude, y = latitude)) +
geom_point(aes(color = cluster), alpha = 0.6)  +
scale_color_brewer(palette = "Spectral") +
geom_label(data = city_cluster_centers,
aes(label = cluster_number),
size = 3) +
theme(legend.position = "none")
