# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
newViolations
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
) %>%
kable(booktabs = TRUE)
newViolations
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
) %>%
newViolations
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
newViolations
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
gg_plot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm") + labs(title = "Number of Violations V.S Median Score")
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
gg_plot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm", sm = FALSE) + labs(title = "Number of Violations V.S Median Score")
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
gg_plot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm", sm = FALSE) + labs(title = "Number of Violations V.S    Median Score", x = "Number of Violations",y = "Median Score")
#| label: load-packages
#| include: false
library(mosaic)
library(tidyverse)
library(mdsr)
library(kableExtra)
library(Lahman)
library(ggplot2)
# add other packages here!
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
gg_plot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm", sm = FALSE) + labs(title = "Number of Violations V.S    Median Score", x = "Number of Violations",y = "Median Score")
#| label: load-packages
#| include: false
library(mosaic)
library(tidyverse)
library(mdsr)
library(kableExtra)
library(Lahman)
library(ggplot2)
# add other packages here!
BattingJoined <- inner_join(People,Batting, by = c("playerID" = "playerID"))
newBatting <- BattingJoined %>%
select(HR, SB, nameFirst, nameLast) %>%
filter(HR > 30, SB > 30)
glimpse(newBatting)
pitcherJoined <- inner_join(People,Pitching, by = c("playerID" = "playerID"))
newPitcher <- pitcherJoined %>%
select(nameFirst,nameLast, W, SO) %>%
filter(W > 30, SO > 300)
glimpse(newPitcher)
BattingJoined <- inner_join(People,Batting, by = c("playerID" = "playerID"))
newBatting50 <- BattingJoined %>%
select(nameFirst, nameLast, HR, H, AB) %>%
filter(HR > 50) %>%
mutate(BattingAverage = H/AB)
glimpse(newBatting50)
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
gg_plot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm", sm = FALSE) + labs(title = "Number of Violations V.S    Median Score", x = "Number of Violations",y = "Median Score")
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
ggplot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm", sm = FALSE) + labs(title = "Number of Violations V.S    Median Score", x = "Number of Violations",y = "Median Score")
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
ggplot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm") + labs(title = "Number of Violations V.S    Median Score", x = "Number of Violations",y = "Median Score")
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
ggplot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm") + labs(title = "Number of Violations V.S Median Score", x = "Number of Violations",y = "Median Score")
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = "sex")
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = grp, values_from = meanL)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = grp, values_from = sex)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = grp, values_from = meanL)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = grp, values_from = meanR)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = grp, values_from = meanR)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = sex, values_from = meanR)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = sdL, values_from = F)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
pivot_wider(names_from = grp, values_from = sdL)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = meanL)
glimpse(pivotedData)
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = c(meanL, sdL, meanR, sdR), names_glue = "{sex}.{name}")
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = c(meanL, sdL, meanR, sdR), names_glue = "{sex}.{.value}")
glimpse(pivotedData)
#| label: load-packages
#| include: false
library(mosaic)
library(tidyverse)
library(mdsr)
library(kableExtra)
library(Lahman)
library(ggplot2)
# add other packages here!
BattingJoined <- inner_join(People,Batting, by = c("playerID" = "playerID"))
newBatting <- BattingJoined %>%
select(HR, SB, nameFirst, nameLast) %>%
filter(HR > 30, SB > 30)
glimpse(newBatting)
pitcherJoined <- inner_join(People,Pitching, by = c("playerID" = "playerID"))
newPitcher <- pitcherJoined %>%
select(nameFirst,nameLast, W, SO) %>%
filter(W > 30, SO > 300)
glimpse(newPitcher)
BattingJoined <- inner_join(People,Batting, by = c("playerID" = "playerID"))
newBatting50 <- BattingJoined %>%
select(nameFirst, nameLast, HR, H, AB) %>%
filter(HR > 50) %>%
mutate(BattingAverage = H/AB)
glimpse(newBatting50)
# You will likely need to drop NA values in this process.
# Do so AFTER getting the variables you need into the data set.
# If you drop NAs too early, you will lose observations that had missing values
# for variables you don't care about, and thus, lose information!
# By getting just Manhattan, your final data set should have 81 obs.
newViolations <- Violations %>%
select(boro, zipcode, score) %>%
filter(boro == "MANHATTAN") %>%
group_by(zipcode) %>%
na.omit() %>%
summarise(
NumberViolations = n(),
MedianScore = median(score),
)
ggplot(newViolations, aes(x = NumberViolations, y = MedianScore)) +
geom_point() +
geom_smooth(method = "lm") + labs(title = "Number of Violations V.S Median Score", x = "Number of Violations",y = "Median Score")
OrigData <- data.frame(grp = c("A","A","B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.22, 0.47, 0.33, 0.55),
sdL = c(0.11, 0.33, 0.11, 0.31),
meanR = c(0.34, 0.57, 0.40, 0.65),
sdR = c(0.08, 0.33, 0.07, 0.27))
pivotedData <- OrigData %>%
pivot_wider(names_from = sex, values_from = c(meanL, sdL, meanR, sdR), names_glue = "{sex}.{.value}")
glimpse(pivotedData)
bruh
#| include: false
# The data is loaded in two separate files
math_data <- read.table("data/student-mat.txt",
sep = ";", header = TRUE)
port_data <- read.table("data/student-por.txt",
sep = ";", header = TRUE)
#| include: false
# The data is loaded in two separate files
math_data <- read.table("data/student-mat.txt",
sep = ";", header = TRUE)
port_data <- read.table("data/student-por.txt",
sep = ";", header = TRUE)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10)
select(Walc.x, traveltime.x)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10)
select(Walc, traveltime.x)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10) %>%
select(Walc, traveltime.x)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10) %>%
select(Walc.x, traveltime.x)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10) %>%
select(G1.x, G2.x, G3.x, G1.y, G2.y, G3.y, Walc.x, traveltime.x)
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10) %>%
select(G3.x, G3.y, Walc.x, traveltime.x)
glimpse(MathPort)
ggplot(MathPort, aes(x = G1.x, y = G2.y)) + geom_point(position = "jitter")
ggplot(MathPort, aes(x = G3.x, y = G3.y)) + geom_point(position = "jitter")
ggplot(MathPort, aes(x = G3.x, y = G3.y)) + geom_point()
ggplot(MathPort, aes(x = G3.x, y = G3.y)) + geom_point(position = "jitter")
ggplot(MathPort, aes(x = G3.x, y = G3.y)) + geom_point(position = "jitter") + labs(title = "Math Final Grade v.s Portugese Final Grade", x = 'Math Final grade', y = "Portugese Final Grade")
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
glimpse(MathPort)
MathPort <- inner_join(math_data, port_data, by = c("school", "sex", "age", "address", "famsize","Pstatus", "Medu","Fedu","Mjob","Fjob","reason","nursery","internet")) %>%
filter(age < 20) %>%
filter(absences.y < 10) %>%
filter(absences.x < 10) %>%
select(G3.x, G3.y, Walc.x, traveltime.x)
glimpse(MathPort)
ggplot(MathPort, aes(x = G3.x, y = G3.y)) + geom_jitter() + labs(title = "Math Final Grade v.s Portugese Final Grade", x = 'Math Final grade', y = "Portugese Final Grade")
