#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
# add other packages here for the spatial work
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
# add other packages here for the spatial work
set.seed(231)
g <- erdos.renyi.game(n = 10, p = 0.3)
plot(g)
diameter <- get_diameter(g)
paths <- get_all_shortest_paths(g, from = 1, to = diameter$vert[2])
diameter <- get_diameter(g)
paths <- get_all_shortest_paths(g, from = 1, to = diameter$vert[2])
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
# add other packages here for the spatial work
set.seed(231)
g <- erdos.renyi.game(n = 10, p = 0.3)
plot(g)
?igraph
?igraphdata
vertices <- vcount(g)
edges <- ecount(g)
cat(vertices, edges)
diameter <- diameter(g)
diameter <- diameter(g)
cat(g)
diameter <- diameter(g)
cat(diameter)
diameter <- diameter(g)
cat(diameter)
#to identifyt the path with that legngth
path <- get_diameter(g)
cat(path)
diameter <- diameter(g)
cat(diameter,", ")
#to identifyt the path with that legngth
path <- get_diameter(g)
cat(path)
betweenness <- betweenness(g)
betweenness <- betweenness(g)
kable(betweenness)
# Visualize the network
# Igraph default plot, may not be "pretty"
data(karate)
karate <- upgrade_graph(karate) # used due to changes in igraph
plot(karate)
faction <- get.vertex.attribute(karate)$Faction
kdegree <- degree(karate)
karatedata <- data.frame(kdegree, faction)
faction <- get.vertex.attribute(karate)$Faction
kdegree <- degree(karate)
karatedata <- data.frame(kdegree, faction)
faction <- get.vertex.attribute(karate)$Faction
kdegree <- degree(karate)
karatedata <- data.frame(kdegree, faction)
faction <- get.vertex.attribute(karate)$Faction
kdegree <- degree(karate)
karatedata <- data.frame(kdegree, faction)
kable(kdegree)
?geom_point
df <- kdegree
ggplot(df, aes(x = Degree)) + geom_point()
df <- karatedata
ggplot(df, aes(x = Degree)) + geom_point()
df <- karatedata$kdegree
ggplot(df, aes(x = Degree)) + geom_point()
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
# add other packages here for the spatial work
# Download SnowGIS_SHP zip file
download.file("http://rtwilson.com/downloads/SnowGIS_SHP.zip",
destfile = "data/SnowGIS_SHP.zip")
# Unzip file in same folder
unzip(zipfile = "data/SnowGIS_SHP.zip",
exdir = "data")
#| label: download-files
#| eval: false
# Download SnowGIS_SHP zip file
download.file("http://rtwilson.com/downloads/SnowGIS_SHP.zip",
destfile = "data/SnowGIS_SHP.zip")
# Unzip file in same folder
unzip(zipfile = "data/SnowGIS_SHP.zip",
exdir = "data")
# Create filepath to unzipped files so we don't need to re-type
data_path <- "data/SnowGIS_SHP"
# List files in SnowGIS_SHP
list.files(data_path)
# List layers
st_layers(data_path)
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
library(st)
# Create filepath to unzipped files so we don't need to re-type
data_path <- "data/SnowGIS_SHP"
# List files in SnowGIS_SHP
list.files(data_path)
# List layers
st_layers(data_path)
# Load second layer
cholera_deaths <- st_read(data_path, layer = "Cholera_Deaths")
class(cholera_deaths)
head(cholera_deaths)
# Context-less plot
ggplot(cholera_deaths) +
geom_sf()
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
library(ggspatial)
install.packages("ggspatial")
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
library(ggspatial)
# add other packages here for the spatial work
# if you get an error that a package is missing, you may
# need to install some dependencies
ggplot(cholera_deaths) +
annotation_map_tile(type = "osm", zoomin = 0) +
geom_sf(aes(size = Count), alpha = 0.7)
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
library(ggspatial)
# add other packages here for the spatial work
set.seed(231)
g <- erdos.renyi.game(n = 10, p = 0.3)
plot(g)
vertices <- vcount(g)
edges <- ecount(g)
cat(vertices, edges)
diameter <- diameter(g)
cat(diameter,", ")
#to identifyt the path with that legngth
path <- get_diameter(g)
cat(path)
betweenness <- betweenness(g)
kable(betweenness)
# Visualize the network
# Igraph default plot, may not be "pretty"
data(karate)
karate <- upgrade_graph(karate) # used due to changes in igraph
plot(karate)
faction <- get.vertex.attribute(karate)$Faction
kdegree <- degree(karate)
karatedata <- data.frame(kdegree, faction)
df <- karatedata$kdegree
#| warning: false
#| message: false
# run clustering on karate network
# this is just one example clustering algorithm for a network
kclusters <- leading.eigenvector.community(karate)
# number of clusters
length(kclusters)
# size of each cluster
sizes(kclusters)
#how to plot the solution
plot(kclusters, karate)
# Get cluster memberships to compare to faction
karatedata <- karatedata %>%
mutate(clusters = as.numeric(membership(kclusters)))
mosaic::tally(clusters ~ faction, data = karatedata)
# Create filepath to unzipped files so we don't need to re-type
data_path <- "data/SnowGIS_SHP"
# List files in SnowGIS_SHP
list.files(data_path)
# List layers
st_layers(data_path)
# Load second layer
cholera_deaths <- st_read(data_path, layer = "Cholera_Deaths")
class(cholera_deaths)
head(cholera_deaths)
# Context-less plot
ggplot(cholera_deaths) +
geom_sf()
# if you get an error that a package is missing, you may
# need to install some dependencies
ggplot(cholera_deaths) +
annotation_map_tile(type = "osm", zoomin = 0) +
geom_sf(aes(size = Count), alpha = 0.7)
install.packages("prettymapr")
# if you get an error that a package is missing, you may
# need to install some dependencies
ggplot(cholera_deaths) +
annotation_map_tile(type = "osm", zoomin = 0) +
geom_sf(aes(size = Count), alpha = 0.7)
cholera_latlong <- cholera_deaths %>%
st_set_crs(27700) %>%
st_transform(4326)
ggplot(cholera_latlong) +
annotation_map_tile(type = "osm", zoomin = 0) +
geom_sf(aes(size = Count), alpha = 0.7)
pumps_latlong <- st_read(data_path, layer = "Pumps") %>%
st_set_crs(27700) %>%
st_transform(4326)
ggplot(cholera_latlong) +
annotation_map_tile(type = "osm", zoomin = 0) +
geom_sf(aes(size = Count), alpha = 0.7) +
geom_sf(data = pumps_latlong, size = 3, color = "red")
#| label: load-packages
#| include: false
library(tidyverse)
library(kableExtra)
library(igraph) # may need to install once; networks
library(igraphdata) # may need to install once; networks
library(ggplot2)
library(sf)
library(ggspatial)
library(leaflet)
# add other packages here for the spatial work
#| eval: false #because it would print static, just turn off
# create dynamic map
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = cholera_latlong,
radius =  ~ Count,
color = "navy",
stroke = FALSE,
fillOpacity = 0.7) %>%
addCircleMarkers(data = pumps_latlong,
radius = 6,
color = "red",
stroke = FALSE,
fillOpacity = 0.7)
betweenness <- betweenness(g)
kable(betweenness)
