tryCatch(
# This is what I want to do...
{(url %>%
read_html() %>%
html_elements(".poem") %>%
html_text2())[1]
},
# ... but if an error occurs, set to Missing and keep going
error=function(error_message) {
return("Missing")
}
)
tryCatch(
# This is what I want to do...
{(url %>%
read_html() %>%
html_elements("div p") %>%
html_text2())[1]
},
# ... but if an error occurs, set to Missing and keep going
error=function(error_message) {
return("Missing")
}
)
## use ldply so get poem text into data frame
ed_text <- plyr::ldply(.data = ed_urls
, .fun = function(url){
tryCatch(
# This is what I want to do...
{(url %>%
read_html() %>%
html_elements("div p") %>%
html_text2())[1]
},
# ... but if an error occurs, set to Missing and keep going
error=function(error_message) {
return("Missing")
}
)
})
# add first line (often used as title) and remove poems missing the text (n=30 missing)
DickinsonPoems <- ed_text %>%
# the title pulled in starts with "s:" so the title starts at the 3rd character
mutate(title = str_sub(ed_titles,start=3)) %>%
select(title, text=V1) %>%
filter(text != "Missing")
div p
div p
