?datasaurus_dozen
?datasauRus_dozen
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
?datasaurus_dozen
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
?datasaurus_dozen
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
?datasaurus_dozen
?datasaurus_dozen
View(datasaurus_dozen)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable()
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
kable_styling()
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
kable_styling(dataset)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
latex_options = "hold_position"
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen
filter(dataset == "dino")
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
# Compute correlation between `x` and `y` for `dino` dataset with label `r`
dino_data %>%
summarize(r = cor(x, y))
#| label: dino-plot
#| eval: true
#| fig-width: 2.5
#| fig-height: 2
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
#| label: star-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "star"`
# Store the resulting filtered data frame as a new data frame called `star_data`
star_data <- datasaurus_dozen %>%
filter(dataset == "star")
# Compute correlation between `x` and `y` for `dino` dataset with label `r`
star_data %>%
summarize(r = cor(x, y))
#| label: star-plot
#| eval: true
#| fig-width: 2.5
#| fig-height: 2
ggplot(data = star_data, mapping = aes(x = x, y = y)) +
geom_point()
#| label: circle-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "circle"`
# Store the resulting filtered data frame as a new data frame called `circle_data`
circle_data <- datasaurus_dozen %>%
filter(dataset == "circle")
#| label: load-packages
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)
library(datasauRus)
# set black & white default plot theme
theme_set(theme_classic())
# improve digit and NA display
options(scipen = 1, knitr.kable.NA = '')
#| label: dataset-freq
datasaurus_dozen %>%
count(dataset) %>%
kable(booktabs = TRUE)
#| label: dino-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "dino"`
# Store the resulting filtered data frame as a new data frame called `dino_data`
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
# Compute correlation between `x` and `y` for `dino` dataset with label `r`
dino_data %>%
summarize(r = cor(x, y))
#| label: dino-plot
#| eval: true
#| fig-width: 2.5
#| fig-height: 2
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
#| label: star-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "star"`
# Store the resulting filtered data frame as a new data frame called `star_data`
star_data <- datasaurus_dozen %>%
filter(dataset == "star")
# Compute correlation between `x` and `y` for `dino` dataset with label `r`
star_data %>%
summarize(r = cor(x, y))
#| label: star-plot
#| eval: true
#| fig-width: 2.5
#| fig-height: 2
ggplot(data = star_data, mapping = aes(x = x, y = y)) +
geom_point()
#| label: circle-cor
# Start with `datasaurus_dozen`
# Filter for observations where `dataset == "circle"`
# Store the resulting filtered data frame as a new data frame called `circle_data`
circle_data <- datasaurus_dozen %>%
filter(dataset == "circle")
# Compute correlation between `x` and `y` for `dino` dataset with label `r`
circle_data %>%
summarize(r = cor(x, y))
#| label: circle-plot
#| eval: true
#| fig-width: 2.5
#| fig-height: 2
ggplot(data = circle_data, mapping = aes(x = x, y = y)) +
geom_point()
